---
- name: Provision CentOS VMs and static IPs
  hosts: localhost
  gather_facts: yes

  vars:
    vcenter_hostname: "192.168.253.129"
    vcenter_username: "administrator@vsphere.local"
    vcenter_password: "Vigneshv12$"
    datacenter_name: "Datacenter"
    folder: "vm"
    datastore_name: "datastore1"
    template_name: "GOLDENTEMPLATE_CENTOS_07"
    guest_id: "centos7_64Guest"
    vm_network: "VM Network"
    guest_domain: "vgs.com"
    dns_servers:
      - "192.168.253.155"
    netmask: "255.255.255.0"
    gateway: "192.168.253.2"
    esxi_hostname: "192.168.253.128"
    vm_list:
     - name: "{{ vm_name }}"
       ip: "{{ vm_ip }}"

  tasks:
    - name: Create new VM with template
      vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        datacenter: "{{ datacenter_name }}"
        folder: "{{ folder }}"
        esxi_hostname: "{{ esxi_hostname }}"
        name: "{{ item.name }}"
        state: poweredon
        guest_id: "{{ guest_id }}"
        datastore: "{{ datastore_name }}"
        template: "{{ template_name }}"
        disk:
          - size_gb: 100
            type: thin
            datastore: "{{ datastore_name }}"
        hardware:
          memory_mb: 8192
          num_cpus: 8
          firmware: efi
        networks:
          - name: "{{ vm_network }}"
            type: static
            ip: "{{ item.ip }}"
            netmask: "{{ netmask }}"
            gateway: "{{ gateway }}"
            dns_servers: "{{ dns_servers }}"
        customization:
          domain: "{{ guest_domain }}"
          dns_servers: "{{ dns_servers }}"
          hostname: "{{ item.name }}"
      loop: "{{ vm_list }}"

    - name: Wait until VM responds to ping
      ansible.builtin.wait_for:
        host: "{{ item.ip }}"
        port: 22                # Wait for SSH port if you also want SSH readiness
        timeout: 120            # 2 minutes max
        state: started
      loop: "{{ vm_list }}"
      delegate_to: localhost

    - name: Ping the VM to verify connectivity
      ansible.builtin.ping:
      vars:
        ansible_host: "{{ item.ip }}"
      loop: "{{ vm_list }}"
      delegate_to: localhost
