âœ… NetBox Install Script (Rocky/CentOS 8)
bash
#!/bin/bash

# 1. Update system and install dependencies
dnf update -y
dnf install -y epel-release
dnf install -y python3 python3-pip python3-devel gcc nginx redis git postgresql-server postgresql-contrib

# 2. Initialize and start PostgreSQL
/usr/bin/postgresql-setup --initdb
systemctl enable --now postgresql

# 3. Create postgres user if missing
id postgres &>/dev/null || useradd -r -s /bin/bash -d /var/lib/pgsql postgres
chown -R postgres:postgres /var/lib/pgsql

# 4. Create NetBox database and user
sudo -u postgres psql <<EOF
CREATE DATABASE netbox;
CREATE USER netbox WITH PASSWORD 'StrongPassword';
ALTER DATABASE netbox OWNER TO netbox;
EOF

# 5. Download NetBox (use release branch)
cd /opt
git clone -b release https://github.com/netbox-community/netbox.git
cd netbox

# 6. Create Python virtual environment
python3 -m venv /opt/netbox/venv
source /opt/netbox/venv/bin/activate
pip install --upgrade pip
pip install -r requirements.txt

# 7. Configure NetBox
cp netbox/netbox/configuration_example.py netbox/netbox/configuration.py
sed -i "s/ALLOWED_HOSTS = 

\[\]

/ALLOWED_HOSTS = 

\['*'\]

/" netbox/netbox/configuration.py
sed -i "s/'NAME': 'netbox'/'NAME': 'netbox'/g" netbox/netbox/configuration.py
sed -i "s/'USER': 'netbox'/'USER': 'netbox'/g" netbox/netbox/configuration.py
sed -i "s/'PASSWORD': ''/'PASSWORD': 'StrongPassword'/g" netbox/netbox/configuration.py
sed -i "s/SECRET_KEY = ''/SECRET_KEY = '$(openssl rand -hex 32)'/" netbox/netbox/configuration.py

# 8. Run migrations and create superuser
cd /opt/netbox/netbox
python3 manage.py migrate
echo "from django.contrib.auth.models import User; User.objects.create_superuser('admin', 'admin@example.com', 'adminpass')" | python3 manage.py shell

# 9. Enable Redis
systemctl enable --now redis

# 10. Start NetBox for testing
python3 manage.py runserver 0.0.0.0:8000
ðŸ”‘ Access NetBox
Open your browser and visit:

Code
http://<your_server_ip>:8000/
Login credentials:

Username: admin

Password: adminpass

sudo rm -rf /opt/netbox

cd /opt
sudo git clone -b release https://github.com/netbox-community/netbox.git
sudo git clone -b v3.7.1 https://github.com/netbox-community/netbox.git
cd /opt/netbox
python3 -m venv /opt/netbox/venv
source /opt/netbox/venv/bin/activate
pip install --upgrade pip
pip install -r requirements.txt
sudo dnf install -y epel-release
sudo dnf install -y python3.11 python3.11-devel
/opt/netbox/python3.11 -m venv /opt/netbox/venv
source /opt/netbox/venv/bin/activate
pip install --upgrade pip
pip install -r /opt/netbox/requirements.txt
pip install --upgrade pip
pip install -r /opt/netbox/requirements.txt
source /opt/netbox/venv/bin/activate
rm -rf /opt/netbox/venv
/usr/bin/python3.11 -m venv /opt/netbox/venv
source /opt/netbox/venv/bin/activate
python --version
pip install --upgrade pip
pip install -r /opt/netbox/requirements.txt

cp /opt/netbox/netbox/netbox/configuration_example.py /opt/netbox/netbox/netbox/configuration.py
vi /opt/netbox/netbox/netbox/configuration.py
ALLOWED_HOSTS = ['*']

DATABASE = {
    'NAME': 'netbox',
    'USER': 'netbox',
    'PASSWORD': 'StrongPassword',
    'HOST': 'localhost',
    'PORT': '',
}

SECRET_KEY = 'your_random_secret_key'
openssl rand -hex 32
7a6df68a96325c2d58564084ef299e1445a6f1fd19b30ebecfd982089c74b510
sudo vi /var/lib/pgsql/data/pg_hba.conf
bash
sudo vi /var/lib/pgsql/data/pg_hba.conf
Replace these lines:


local   all             all                                     peer
host    all             all             127.0.0.1/32            ident
host    all             all             ::1/128                 ident
With:


local   all             all                                     md5
host    all             all             127.0.0.1/32            md5
host    all             all             ::1/128                 md5
sudo systemctl restart postgresql
sudo systemctl stop postgresql
sudo dnf remove -y postgresql postgresql-server postgresql-contrib
sudo dnf module disable postgresql
sudo dnf module enable postgresql:15
sudo dnf install -y postgresql15 postgresql15-server postgresql15-contrib
sudo dnf install -y postgresql-server
sudo systemctl enable --now postgresql
sudo systemctl status postgresql
sudo systemctl stop postgresql
sudo rm -rf /var/lib/pgsql/data
sudo -u postgres initdb -D /var/lib/pgsql/data
sudo systemctl enable --now postgresql
sudo systemctl status postgresql

sudo vi /var/lib/pgsql/data/pg_hba.conf
local   all             all                                     md5
host    all             all             127.0.0.1/32            md5
host    all             all             ::1/128                 md5
sudo systemctl restart postgresql
sudo vi /var/lib/pgsql/data/pg_hba.conf
from
local   all             all                                     md5
to
local   all             all                                     trust
sudo systemctl restart postgresql

sudo -u postgres psql

ALTER USER postgres WITH PASSWORD 'Root@123';
\q
sudo vi /var/lib/pgsql/data/pg_hba.conf
sudo systemctl restart postgresql
psql -U postgres -W
CREATE DATABASE netbox;
CREATE USER netbox WITH PASSWORD 'Root@123';
ALTER DATABASE netbox OWNER TO netbox;
\q


cd /opt/netbox/netbox
python manage.py migrate
python manage.py createsuperuser
python manage.py runserver 0.0.0.0:8000


cd /opt/netbox/netbox
source /opt/netbox/venv/bin/activate
python manage.py collectstatic --no-input
sudo systemctl restart nginx
sudo vi /etc/nginx/conf.d/netbox.conf

nginx
server {
    listen 80;
    server_name netbox.local;

    # Serve NetBox static files
    location /static/ {
        alias /opt/netbox/netbox/static/;
    }

    # Proxy requests to NetBox backend
    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}



sudo systemctl restart nginx
cd /opt/netbox/netbox
source /opt/netbox/venv/bin/activate
python manage.py runserver 127.0.0.1:8000
python manage.py runserver 0.0.0.0:8000
pip install gunicorn
cd /opt/netbox/netbox
gunicorn --workers 3 --bind 127.0.0.1:8001 netbox.wsgi
