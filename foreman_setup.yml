---
- name: Configure Foreman and related services
  hosts: all
  become: yes
  vars:
    repo_mount: "//192.168.31.87/ISO"
    mount_point: "/var/www/html/repo"
    username: "vigne"
    password: "Vigneshv12$"
    skip_patch: false
    run_only: ""
    domain: "vgs.com"
    reverse_zone: "253.168.192.in-addr.arpa"
    named_conf: "/etc/named.conf"
    zone_dir: "/var/named"
    java_path: "/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.412.b08-1.el7_9.x86_64/bin"
    module_path: "/etc/puppetlabs/code/environments/production/modules/java_ks"

  tasks:
    - name: Create mount point directory
      file:
        path: "{{ mount_point }}"
        state: directory
        mode: '0777'

    - name: Mount ISO share
      mount:
        path: "{{ mount_point }}"
        src: "{{ repo_mount }}"
        fstype: cifs
        opts: "username={{ username }},password={{ password }},rw,dir_mode=0777,file_mode=0777,vers=3.0"
        state: mounted
      when: ansible_mounts | selectattr('mount', 'equalto', mount_point) | list | length == 0

    - name: Remove existing YUM repo files
      ansible.builtin.file:
        path: "/etc/yum.repos.d/{{ item }}"
        state: absent
      loop: "{{ query('fileglob', '/etc/yum.repos.d/*.repo') }}"

    - name: Create base.repo
      copy:
        content: |
          [base]
          name=CentOS Base Repo
          baseurl=file://{{ mount_point }}/centos
          enabled=1
          gpgcheck=0
        dest: /etc/yum.repos.d/base.repo

    - name: Create patch.repo
      copy:
        content: |
          [patch]
          name=CentOS Patch Repo
          baseurl=file://{{ mount_point }}/installed_rhel7
          enabled=1
          gpgcheck=0
        dest: /etc/yum.repos.d/patch.repo

    - name: Create foreman.repo
      copy:
        content: |
          [foreman]
          name=CentOS Foreman Repo
          baseurl=file://{{ mount_point }}/installed_rhel7
          enabled=1
          gpgcheck=0
        dest: /etc/yum.repos.d/foreman.repo

    - name: Create puppet.repo
      copy:
        content: |
          [puppet]
          name=Puppet 7 Repository
          baseurl=file://{{ mount_point }}/puppet7
          enabled=1
          gpgcheck=0
        dest: /etc/yum.repos.d/puppet.repo

    - name: Create vault.repo
      copy:
        content: |
          [base]
          name=CentOS Vault Base
          baseurl=http://vault.centos.org/7.9.2009/os/$basearch/
          enabled=1
          gpgcheck=1
          gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7

          [updates]
          name=CentOS Vault Updates
          baseurl=http://vault.centos.org/7.9.2009/updates/$basearch/
          enabled=1
          gpgcheck=1
          gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7

          [extras]
          name=CentOS Vault Extras
          baseurl=http://vault.centos.org/7.9.2009/extras/$basearch/
          enabled=1
          gpgcheck=1
          gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
        dest: /etc/yum.repos.d/vault.repo

    - name: Install sshpass
      yum:
        name: sshpass
        state: present

    - name: Perform system update and reboot
      when: run_only == "patch" and not skip_patch
      block:
        - name: Update all packages
          yum:
            name: '*'
            state: latest
        - name: Reboot system
          reboot:

    - name: Exit if run-only is patch
      block:
        - name: Terminate playbook for patch-only mode
          fail:
            msg: "Exiting playbook as run_only is set to 'patch'"
          when: run_only == "patch"

    - name: Check DNS resolution
      command: nslookup "{{ ansible_hostname }}"
      register: nslookup_result
      ignore_errors: yes
      changed_when: false

    - name: Configure DNS resolver
      copy:
        content: "nameserver 192.168.253.151"
        dest: /etc/resolv.conf
      when: nslookup_result.rc != 0

    - name: Install BIND packages
      yum:
        name:
          - bind
          - bind-utils
        state: present

    - name: Install Java and Foreman stack
      yum:
        name:
          - java-1.8.0-openjdk
          - java-1.8.0-openjdk-devel
          - puppetserver
          - katello
          - foreman-installer
        state: present

    - name: Set JAVA path
      lineinfile:
        path: /etc/environment
        line: "PATH={{ java_path }}:{{ ansible_env.PATH }}"
        state: present

    - name: Remove existing java_ks module
      file:
        path: "{{ module_path }}"
        state: absent
      when: module_path is exists

    - name: Install puppetlabs-java_ks module
      shell: /opt/puppetlabs/bin/puppet module install puppetlabs-java_ks --force

    - name: Link java_ks module for Foreman installer
      file:
        src: "{{ module_path }}"
        dest: /usr/share/foreman-installer/modules/java_ks
        state: link

    - name: Check if Foreman is running
      systemd:
        name: foreman
        state: started
      register: foreman_status
      ignore_errors: yes

    - name: Run Foreman installer with Katello scenario
      command: foreman-installer --scenario katello
      when: foreman_status.status.ActiveState != "active"
      changed_when: true

    - name: Configure firewall for Foreman
      firewalld:
        service: "{{ item }}"
        permanent: yes
        state: enabled
        immediate: yes
      loop:
        - http
        - https

    - name: Install DHCP and TFTP services
      yum:
        name:
          - dhcp-server
          - dhcp
          - tftp-server
        state: present

    - name: Configure Foreman TFTP proxy
      command: >
        foreman-installer --scenario katello
        --foreman-proxy-tftp true
        --foreman-proxy-tftp-managed true
        --foreman-proxy-tftp-root /var/lib/tftpboot
        --foreman-proxy-tftp-servername "{{ foreman_proxy_tftp_servername | default(ansible_fqdn) }}"
      changed_when: true

    - name: Generate DNSSEC key for Foreman proxy
      command: dnssec-keygen -a HMAC-SHA512 -b 512 -n USER foreman-proxy
      register: dnssec_keygen
      changed_when: true

    - name: Move DNSSEC private key
      command: mv {{ item }} /etc/foreman-proxy/dns.key
      loop: "{{ (dnssec_keygen.stdout_lines | select('match', 'Kforeman-proxy.*\\.private') | list) }}"
      when: dnssec_keygen.stdout_lines is defined
      changed_when: true

    - name: Set ownership and permissions for DNS key
      file:
        path: /etc/foreman-proxy/dns.key
        owner: foreman-proxy
        group: foreman-proxy
        mode: '0600'

    - name: Configure Foreman DNS proxy
      command: >
        foreman-installer --scenario katello
        --foreman-proxy-dns true
        --foreman-proxy-dns-managed false
        --foreman-proxy-dns-provider nsupdate
        --foreman-proxy-dns-server 192.168.253.151
        --foreman-proxy-dns-forwarders="8.8.8.8,8.8.4.4"
        --foreman-proxy-keyfile /etc/foreman-proxy/dns.key
      changed_when: true

    - name: Configure Foreman DHCP proxy
      command: >
        foreman-installer --scenario katello
        --foreman-proxy-dhcp true
        --foreman-proxy-dhcp-managed true
        --foreman-proxy-dhcp-server "{{ foreman_proxy_dhcp_server | default(ansible_fqdn) }}"
        --foreman-proxy-dhcp-range ""
        --foreman-proxy-dhcp-gateway "{{ foreman_proxy_dhcp_gateway | default('192.168.253.2') }}"
        --foreman-proxy-dhcp-nameservers "{{ foreman_proxy_dhcp_nameservers | default(ansible_fqdn) }}"
        --foreman-proxy-dhcp-config "/etc/dhcp/dhcpd.conf"
        --foreman-proxy-dhcp-leases "/var/lib/dhcpd/dhcpd.leases"
      changed_when: true

    - name: Configure firewall for DHCP, TFTP, and Puppet
      firewalld:
        service: "{{ item.service | default(omit) }}"
        port: "{{ item.port | default(omit) }}"
        permanent: yes
        state: enabled
        immediate: yes
      loop:
        - { service: dhcp }
        - { service: tftp }
        - { port: 8140/tcp }
